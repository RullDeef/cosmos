

		Рекомендации по написанию и документированию кода данного проекта.


1		СТРУКТУРНЫЕ ЕДИНИЦЫ ПРОГРАММЫ.

1.1		Каждая структурная единица программы (класс, интерфейс) должна
		располагаться в отдельном файле. Исключения составляют только
		вспомогательные структурные единицы, которые никак не используются
		за пределами основной и имеют модификатор доступа <private>.


2		КОММЕНТИРОВАНИЕ И ДОКУМЕНТИРОВАНИЕ.

2.1		Для написания однострочных и многострочных комментариев
		предпочтительно использование формата C-style. Внезависимости от
		размера комментария, для записи его в документацию необходимо(!)
		использовать многострочный вариант записи.

			/**
			 * \brief Brief description of a class
			 *		  named ExampleClass.
			 */
			public class ExampleClass
			{
				/**
				 * Some cool property.
				 */
				public int value;

				...
			}

2.2		Для описания файлов требуется в начале каждого файла писать
		комментарий в виде приведённом ниже. Параметр \file дублирует
		название описываемого файла. В параметре \brief указывается
		краткое(!) описание содержимого файла без использования пустых
		строк (это важно!).

			/**
			 * \file    PlanetGraphGenerator.cs
			 * \brief   File with PlanetGraphGenerator definition.
			 */
			using UnityEngine;

			...

2.3		Для документирования класса следует использовать комментарий
		непосредственно перед определением класса в приведённом ниже виде.
		Параметр \brief содержит краткое описание назначения класса.
		(не использовать пустые строки!).

			/**
			 * \brief   Monobehaviour.
			 *          PlanetGraph generator and holder.
			 */
			public class PlanetGraphGenerator : MonoBehaviour
			{
				...
			}

2.4		Для создания расширенного описания той или иной структурной единицы
		следует использовать пустые строки в документирующих комментариях.
		Весь текст после первой пустой строки будет помещён в расширенное
		описание соответствующего эолемента.

			/**
			 * \brief	this is brief description.
			 *			And it can be placed at multiple lines.
			 *
			 *			This is extended description that will
			 *			not be shown in index pages in docs.
			 */
			public class ExampleClass
			{
				...
			}

3		ПЕРЕМЕННЫЕ И ИХ ПРИМЕНЕНИЕ.

3.1		Для назначения имён переменным всем программистам (в целях удобства)
		следует придерживаться одних и тех же правил именования:

		1.	Имена классов, структур, функций начинаются с заглавной буквы, а
			имена переменных - с маленькой.

		2.	Если функция возвращает вычисляемый параметр, то её название
			должно начинаться с префикса Get:

				public int GetPosition() { ... }

3.2		Количество переменных должно быть минимально возможным.

3.3		Если переменную возможно заменить функцией, то лучше так и сделать.
